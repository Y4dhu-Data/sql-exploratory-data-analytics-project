USE DataWarehouseAnalytics

--Explore all Objects in the Database

SELECT
*
FROM 
INFORMATION_SCHEMA.TABLES

--Explore all columns int he Database

SELECT 
*
FROM
INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_products'

--explore all Countries our customers come from 

SELECT DISTINCT country FROM gold.dim_customers

--explore all categories "the major dimensions"

SELECT DISTINCT category,subcategory,product_name FROM gold.dim_products ORDER BY 1,2,3

--find the date of the first and last order
--total orders by month
select
MIN(order_date) AS FirstOrder,
MAX(order_date) AS LastOrder,
DATEDIFF(MONTH,MIN(order_date),MAX(order_date)) as OrderRangeYears
FROM gold.fact_sales

--findest the youngest and the oldest customers

SELECT
MIN(birthdate) as oldest_customers,
DATEDIFF(YEAR,MIN(birthdate),GETDATE()) AS Age_of_OldestCust,
MAX(birthdate) as youngest_customers,
DATEDIFF(YEAR,MAX(birthdate),GETDATE()) as Age_Of_YoungestCustomer
FROM gold.dim_customers

--==Measure Explorations

--Find the total Sales

SELECT SUM(sales_amount) TotalSales FROM gold.fact_sales

--Find how many items are sold

SELECT sum(product_key) ItemsSold from gold.fact_sales

--find the average selling price

SELECT AVG(price) AvgSellPrice FROM gold.fact_sales

--Find the total numbers of orders

SELECT COUNT(DISTINCT order_number) TotalOrders FROM gold.fact_sales

--FIND THE TOTAL NUMBER OF CUSTOMERS 
SELECT COUNT(customer_key) totalCustomers FROM gold.dim_customers

--FIND THE TOTAL NUMBER OF CUSTOMERS WHO HAS PLACED AN ORDER
SELECT COUNT(DISTINCT customer_key) totalCustomersoRDER FROM gold.fact_sales

--Find the total number of Products
SELECT COUNT(DISTINCT product_name) TotalProducts from gold.dim_products

--SHOW ALL KEY METRICS OF THE CUSTOMERS

SELECT 'Total Sales' as Measure_Name,  SUM(sales_amount) AS Measure_Value FROM gold.fact_sales
UNION ALL
SELECT 'Items Sold',COUNT(quantity) FROM gold.fact_sales
UNION ALL
SELECT 'AvgSellingPrice ',AVG(product_key) FROM gold.fact_sales
UNION ALL
SELECT 'TotalOrders',COUNT(DISTINCT order_number) from gold.fact_sales
UNION ALL
SELECT 'TotalCustomers',COUNT(DISTINCT customer_key) FROM gold.fact_sales
UNION ALL
SELECT 'TotalProducts',COUNT(product_name) FROM gold.dim_products

--Magnitude

--Find the total customers by countries

SELECT 
COUNT(customer_key) TotalCustomers,
country
FROM
gold.dim_customers
GROUP BY country
ORDER BY TotalCustomers DESC

--Find the customers by gender

SELECT
COUNT(customer_key) TotalCust,
gender
from
gold.dim_customers
group by gender
order by TotalCust Desc

--Find the total products by category

select
COUNT(distinct product_id) as TotalProducts,
category
from
gold.dim_products
Group by category
Order by TotalProducts Desc

--what is the average costs in each category

select 
AVG(cost) Avg_Price_By_Category,
Category
from
gold.dim_products 
group by category
order by  Avg_Price_By_Category Desc

--what is the total revenue geenrated by each category

select 
SUM(S.price) Total_Revenue_By_Category,
P.Category
from
gold.fact_sales S
left join gold.dim_products P on S.product_key = P.product_key
Group by P.category
Order by Total_Revenue_By_Category Desc

--find the total revenue generated by each customer 

SELECT
C.customer_key,
C.first_name,
C.last_name,
SUM(S.sales_amount) TotalRevenueByCustomer
FROM
gold.fact_sales S
left join gold.dim_customers C on S.customer_key = C.customer_key
Group by C.customer_key, C.first_name,C.last_name
Order by TotalRevenueByCustomer desc

--What is the distribution of sold items across countries

SELECT
C.country,
SUM(S.quantity) Total_Sold_Items_By_Countries
FROM
gold.fact_sales S
left join gold.dim_customers C on S.customer_key = C.customer_key
Group by C.country
Order by Total_Sold_Items_By_Countries desc


select * from gold.dim_customers
select * from gold.dim_products
select * from gold.fact_sales

--Ranking

--Which 5 Products generate the highest revenue

SELECT 
* 
FROM
(SELECT
P.Category,
P.Subcategory,
SUM(S.Sales_Amount) total_revenue_By_Category,
ROW_NUMBER() over(order by SUM(S.Sales_Amount) desc) Rank_Product_ByRevenue
from
gold.fact_sales S
left join gold.dim_products P on S.product_key = P.product_key
group by P.category,P.subcategory
)t where Rank_Product_ByRevenue <= 5

--Which is the 5 worst-performing products in terms of sales

SELECT 
* FROM(
	SELECT
	P.product_name,
	SUM(S.Sales_amount) TotalRevenueByProduct,
	ROW_NUMBER() OVER(Order by SUM(S.Sales_amount) ASC) Rank_Revenue
	FROM
	gold.fact_sales S
	left join gold.dim_products P on S.product_key = P.product_key
	GROUP BY P.product_name
)t where Rank_Revenue <= 5

--Find the Top-10 customers who have generated the highest revenue and 3 customers with the fewer orders placed

SELECT 
	customer_key,
	first_name,
	last_name,
	Total_Revenue,
	Rank_Revenue
FROM (
		SELECT
		C.customer_key,
		C.customer_id,
		C.first_name,
		C.last_name,
		SUM(S.Sales_Amount) Total_Revenue,
		ROW_NUMBER() OVER(ORDER BY SUM(S.Sales_Amount) Desc) Rank_Revenue
		FROM
		gold.fact_sales S
		LEFT JOIN gold.dim_customers C ON S.customer_key = C.customer_key
		GROUP BY C.customer_key,C.customer_id,C.first_name,C.last_name
)t where Rank_Revenue <= 10

SELECT 
	customer_key,
	first_name,
	last_name,
	Total_Orders
FROM (
		SELECT
		C.customer_key,
		C.customer_id,
		C.first_name,
		C.last_name,
		COUNT(DISTINCT S.order_number) Total_Orders,
		ROW_NUMBER() OVER(ORDER BY COUNT(DISTINCT S.order_number) Asc) Rank_Orders
		FROM
		gold.fact_sales S
		LEFT JOIN gold.dim_customers C ON S.customer_key = C.customer_key
		GROUP BY C.customer_key,C.customer_id,C.first_name,C.last_name
)t where Rank_Orders <= 3

